import clans
import flud
import krytku
import sconsole

NUMBERS_ROWS = 40

import atexit

import telebot
from telebot import types
import os
import json
import psutil
import requests
import time
import random
import datetime

# –ú–û–î–£–õ–ò

import adm
from tokens import bot, consolee
import voice
import flud
import game
import other
import krytku
import clans
import sconsole
from tokens import pers1, pers2, ls, chat_id, chat_game, chat_shop
context = {}


likes = 0
dislikes = 0


def on_start():
    print("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω")
    response = f"üìå–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω"
    bot.send_message(consolee, response)

on_start()


def on_stop():
    print("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω")
    response = f"üìå–ë–æ—Ç –≤—ã–∫–ª—é—á–µ–Ω"
    bot.send_message(consolee, response)




@atexit.register
def exit_handler():
    on_stop()








with open('roli.json', 'r', encoding="utf-8") as file:
    data = json.load(file)
    instructions = data['inst']
    instructions2 = data['inst2']
    help = data['help']










bot.skip_pending = True




@bot.message_handler(func=lambda message: message.text.lower() == '–∏–Ω—Å—Ç—Ä—É–∫—Ç–∞–∂')
def handle_instructions_command(message):
    flud.instr(message)


@bot.message_handler(commands='start')
def handle_instructions_command(message):
    game.send_help(message)

@bot.message_handler(commands='help')
def handle_instructions_command(message):
    game.send_help(message)

@bot.message_handler(func=lambda message: message.text.lower() == '–ø–æ–º–æ—â—å')
def handle_instructions_command(message):
    game.send_help(message)






'''                                                     GRANULE GAME                                                                '''

@bot.message_handler(func=lambda message: message.text.startswith('–∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è'))
def compensate(message):
    adm.compins(message)





@bot.message_handler(func=lambda message: message.text.lower() == f'–∫—Ä—É—Ç–∏—Ç—å –æ—Ä—É–∂–µ–π–Ω—ã–π')
def roles(message):
    krytku.oryj1(message)
@bot.message_handler(func=lambda message: message.text.lower() == f'–∫—Ä—É—Ç–∏—Ç—å –æ—Ä—É–∂–µ–π–Ω—ã–π 10')
def roles(message):
    krytku.oryj10(message)

@bot.message_handler(func=lambda message: message.text.lower() == f'–∫—Ä—É—Ç–∏—Ç—å –æ—Ä—É–∂–µ–π–∫—É')
def roles(message):
    krytku.oryj1(message)
@bot.message_handler(func=lambda message: message.text.lower() == f'–∫—Ä—É—Ç–∏—Ç—å –æ—Ä—É–∂–µ–π–∫—É 10')
def roles(message):
    krytku.oryj10(message)

@bot.message_handler(func=lambda message: message.text.lower() == f'–∫—Ä—É—Ç–∏—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç')
def roles(message):
    krytku.standart1(message)
@bot.message_handler(func=lambda message: message.text.lower() == f'–∫—Ä—É—Ç–∏—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç 10')
def roles(message):
    krytku.standart10(message)

@bot.message_handler(func=lambda message: message.text.lower() == f'–∫—Ä—É—Ç–∏—Ç—å {pers1}')
def roles(message):
    krytku.persone(message)
@bot.message_handler(func=lambda message: message.text.lower() == f'–∫—Ä—É—Ç–∏—Ç—å {pers1} 10')
def roles(message):
    krytku.persone10(message)

@bot.message_handler(func=lambda message: message.text.lower() == f'–∫—Ä—É—Ç–∏—Ç—å {pers2}')
def roles(message):
    krytku.perstwo(message)
@bot.message_handler(func=lambda message: message.text.lower() == f'–∫—Ä—É—Ç–∏—Ç—å {pers2} 10')
def roles(message):
    krytku.perstwo10(message)










@bot.message_handler(func=lambda message: message.text.lower() == '—Ñ–µ—Ä–º–∞')
def send_krutki(message):
    game.defferma(message)

@bot.message_handler(func=lambda message: message.text.lower() == '–≤–∏–ø —Ñ–µ—Ä–º–∞')
def farm_plus(message):
    game.vipferma(message)

@bot.message_handler(func=lambda message: message.text.startswith('–ø–∞–π'))
def handle_kto(message):
    game.peredacha(message)

@bot.message_handler(func=lambda message: message.text.startswith('–í—ã–¥–∞—Ç—å'))
def handle_kto(message):
    adm.give(message)

@bot.message_handler(func=lambda message: message.text.startswith('–°–Ω—è—Ç—å'))
def handle_kto(message):
    adm.snyat(message)

@bot.message_handler(func=lambda message: message.text.startswith('–ü–∞–π'))
def handle_kto(message):
    game.peredacha(message)

@bot.message_handler(func=lambda message: message.text.startswith('–∫—Ç–æ —Ç—ã'))
def handle_kto(message):
    game.kto_ti(message)

@bot.message_handler(func=lambda message: message.text.startswith('–ö—Ç–æ —Ç—ã'))
def handle_kto(message):
    game.kto_ti(message)

@bot.message_handler(func=lambda message: message.text.lower() == '–∫—Ç–æ —è')
def roles(message):
    game.ktoya(message)

@bot.message_handler(func=lambda message: message.text.startswith('+–æ–ø–∏—Å–∞–Ω–∏–µ'))
def save_description(message):
    other.opisanie(message)

@bot.message_handler(func=lambda message: message.text.lower() == '—Ç–æ–ø')
def roles(message):
    game.top(message)

@bot.callback_query_handler(func=lambda call: True)
def handle_button_click(call):
    other.selectop(call)

@bot.message_handler(func=lambda message: message.text.lower() == '–∫—Ä—É—Ç–∫–∏')
def roles(message):
    game.krytki(message)

@bot.message_handler(func=lambda message: message.text.lower() == '–¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è')
def send_info(message):
    game.achivment(message)

@bot.message_handler(func=lambda message: message.text.lower() == '–º–∞–≥–∞–∑–∏–Ω')
def rest(message):
    game.shop(message)

@bot.message_handler(func=lambda message: message.text.lower() == '–±–æ—Ç')
def get_chat_id(message):
    other.bottyt(message)




'''                                               –ö–ª–∞–Ω—ã                                                                   '''


@bot.message_handler(func=lambda message: message.text.startswith('—Å–æ–∑–¥–∞—Ç—å –∫–ª–∞–Ω'))
def handle_message(message):
    clans.create_clan(message)
@bot.message_handler(func=lambda message: message.text.startswith('–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–Ω'))
def handle_message(message):
    clans.create_clan(message)

@bot.message_handler(func=lambda message: message.text.startswith('–ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å'))
def handle_message(message):
    clans.invite_to_clan(message)
@bot.message_handler(func=lambda message: message.text.startswith('–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å'))
def handle_message(message):
    clans.invite_to_clan(message)

@bot.message_handler(func=lambda message: message.text.lower() == '—É–¥–∞–ª–∏—Ç—å –∫–ª–∞–Ω')
def handle_message(message):
    clans.delete_clan(message)

@bot.message_handler(func=lambda message: message.text.startswith('–£–¥–∞–ª–∏—Ç—å'))
def handle_message(message):
    clans.remove_from_clan(message)
@bot.message_handler(func=lambda message: message.text.startswith('—É–¥–∞–ª–∏—Ç—å'))
def handle_message(message):
    clans.remove_from_clan(message)

@bot.message_handler(func=lambda message: message.text.startswith('–ö–∞–∑–Ω–∞'))
def handle_message(message):
    clans.add_to_kazna(message)
@bot.message_handler(func=lambda message: message.text.startswith('–∫–∞–∑–Ω–∞'))
def handle_message(message):
    clans.add_to_kazna(message)

@bot.message_handler(func=lambda message: message.text.lower() == '–≤—ã–π—Ç–∏ —Å –∫–ª–∞–Ω–∞')
def handle_message(message):
    clans.leave_clan(message)

@bot.message_handler(func=lambda message: message.text.lower() == '–∫–ª–∞–Ω—ã')
def handle_message(message):
    clans.clanlist(message)

@bot.message_handler(func=lambda message: message.text.lower() == '–º–æ–π –∫–ª–∞–Ω')
def handle_message(message):
    clans.send_my_clan(message)
@bot.message_handler(func=lambda message: message.text.lower() == '–∫–ª–∞–Ω')
def handle_message(message):
    clans.send_my_clan(message)









'''                                                Flud                                                                   '''
@bot.message_handler(func=lambda message: message.text.lower() == '–ª–æ—Ö')
def handle_message(message):
    voice.lox(message)

@bot.message_handler(func=lambda message: message.text.lower() == '—Ä–∞–Ω–¥–æ–º')
def send_random_music(message):
    voice.random_voice(message)

@bot.message_handler(func=lambda message: message.text.lower() == '—Ç–∏–ª—å—Ç')
def send_random_music(message):
    voice.tilt(message)

@bot.message_handler(func=lambda message: message.text.lower() == '—Ç—Ä–µ—à')
def send_random_music(message):
    voice.trash(message)

@bot.message_handler(func=lambda message: message.text.lower() == '—Ñ–æ–Ω–∫')
def send_random_music(message):
    voice.phonki(message)

@bot.message_handler(func=lambda message: message.text.lower() == '–∞–π–¥–∏')
def get_chat_id(message):
    adm.get_id(message)

@bot.message_handler(func=lambda message: message.text.lower() == '—Ä–æ–ª–∏')
def roles(message):
    flud.rolies(message)


@bot.message_handler(func=lambda message: message.text.lower() == '—Ä–µ—Å—Ç—ã')
def rest(message):
    flud.rests(message)

@bot.message_handler(func=lambda message: message.text.lower() == '–∫–æ–º–∞–Ω–¥—ã')
def rest(message):
    flud.fludcommands(message)

@bot.message_handler(commands=['–∑–∞–ø–∏—Å–∞—Ç—å_—Ä–µ—Å—Ç—ã'])
def write_roles_handler(message):
    adm.write_rest(message)

@bot.message_handler(commands=['–∑–∞–ø–∏—Å–∞—Ç—å_–∫–æ–º–∞–Ω–¥—ã'])
def write_roles_handler(message):
    adm.write_commands(message)

@bot.message_handler(commands=['–∑–∞–ø–∏—Å–∞—Ç—å_—Ä–æ–ª–∏'])
def write_roles_handler(message):
    adm.write_roles(message)




'''                                              Bot message                                                                '''



@bot.message_handler(func=lambda message: True, content_types=['new_chat_members'])
def greet_new_members(message):
    other.newmemb(message, instructions, help)











if __name__ == '__main__':
    bot.delete_webhook(drop_pending_updates=True)
    bot.infinity_polling()