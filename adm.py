import json

from tokens import bot, ls, chat_id, tanya, chat_game, consolee




def get_id(message):
    if message.from_user.id == ls:
        chat = message.chat.id


        chatid = message.chat.id
        user_id = message.from_user.id
        user_name = message.from_user.username
        response = f"üìå{user_id} ({user_name}) –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É /–∞–π–¥–∏"
        bot.send_message(consolee, response)
        bot.send_message(chatid, f"ID –≤–∞—à–µ–≥–æ —á–∞—Ç–∞: {chat_id}")

'''                                  –ê–î–ú–ò–ù –ö–û–ú–ê–ù–î–´ –î–õ–Ø GRANULE                                               '''

def compins(message):
    if message.from_user.id == ls:
        try:
            comp_value = int(message.text.split()[1])  # Extract the compensation value from the message
        except (IndexError, ValueError):
            bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã '–∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è'.")
            return

        # Load the JSON file
        with open('krutki.json', 'r') as file:
            data = json.load(file)

        # Increase each value by the compensation value
        for key in data:
            data[key] += comp_value

        # Write the updated data back to the JSON file
        with open('krutki.json', 'w') as file:
            json.dump(data, file)

        bot.reply_to(message, f"–ö–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è {comp_value} –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∫–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.")



def give(message):
    nazv = message.text.split("@")[1].split()[0]
    summa = int(message.text.split()[-1])
    igrok = message.from_user.username

    chat = message.chat.id

    if message.from_user.id == ls:
        user_id = message.from_user.id

        user_namee = message.from_user.username
        response = f"üìå{user_id} ({user_namee}) –í—ã–¥–∞–ª @{nazv} {summa} –∫—Ä—É—Ç–æ–∫"
        bot.send_message(consolee, response)
        user = message.from_user.username

        krutki_file = 'krutki.json'
        with open(krutki_file, 'r') as file:
            krutki_data = json.load(file)
        if nazv not in krutki_data:
            krutki_data[nazv] = 0
        if igrok not in krutki_data:
            krutki_data[igrok] = 0

        if krutki_data[igrok] > 0 or krutki_data[igrok] == 0:
            krutki_data[nazv] += summa
            with open('krutki.json', 'w') as file:
                json.dump(krutki_data, file)




        msg = bot.send_message(message.chat.id, f"‚úÖ| @{igrok} –≤—ã–¥–∞–ª @{nazv} {summa} –∫—Ä—É—Ç–æ–∫!")
def snyat(message):
    nazv = message.text.split("@")[1].split()[0]
    summa = int(message.text.split()[-1])
    igrok = message.from_user.username

    chat = message.chat.id

    if message.from_user.id == ls:
        user_id = message.from_user.id

        user_namee = message.from_user.username
        response = f"üìå{user_id} ({user_namee}) –°–Ω—è–ª @{nazv} {summa} –∫—Ä—É—Ç–æ–∫"
        bot.send_message(consolee, response)
        user = message.from_user.username

        krutki_file = 'krutki.json'
        with open(krutki_file, 'r') as file:
            krutki_data = json.load(file)
        if nazv not in krutki_data:
            krutki_data[nazv] = 0
        if igrok not in krutki_data:
            krutki_data[igrok] = 0

        if krutki_data[igrok] > 0 or krutki_data[igrok] == 0:
            krutki_data[nazv] -= summa
            with open('krutki.json', 'w') as file:
                json.dump(krutki_data, file)




        msg = bot.send_message(message.chat.id, f"‚úÖ| @{igrok} —Å–Ω—è–ª —É @{nazv} {summa} –∫—Ä—É—Ç–æ–∫!")


'''                                      –î–õ–Ø –ë–ï–°–ï–î–´ –ó–ê–ü–ò–°–¨ –í JSON                      '''








def write_commands(message):
    chat = message.chat.id


    if message.from_user.id == ls or message.from_user.id == tanya:
        user_id = message.from_user.id
        user_name = message.from_user.username
        respons1e = f"üìå{user_id} ({user_name}) –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É /–∑–∞–ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã"
        bot.send_message(consolee, respons1e)
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π "–∑–∞–ø–∏—Å–∞—Ç—å —Ä–æ–ª–∏"
        if message.text.lower().startswith('/–∑–∞–ø–∏—Å–∞—Ç—å_–∫–æ–º–∞–Ω–¥—ã'):
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã
            text = message.text[len('/–∑–∞–ø–∏—Å–∞—Ç—å_–∫–æ–º–∞–Ω–¥—ã'):].strip()

            if len(text) > 0:
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç –≤ —Ñ–∞–π–ª roli.json
                with open('commands.json', 'w') as file:
                    data = {
                        'command': text
                    }
                    json.dump(data, file)

                response = '–¢–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω –≤ commands.json!'
                newtxt = "üìå –ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è '–∫–æ–º–∞–Ω–¥—ã' —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω"
                bot.send_message(consolee, newtxt)
            else:
                response = '–í—ã –Ω–µ –≤–≤–µ–ª–∏ —Ç–µ–∫—Å—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ commands.json'
        else:
            response = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞'

        bot.reply_to(message, response)

def write_rest(message):
    if message.from_user.id == ls or message.from_user.id == tanya:
        user_id = message.from_user.id
        user_name = message.from_user.username
        respons1e = f"üìå{user_id} ({user_name}) –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É /–∑–∞–ø–∏—Å–∞—Ç—å —Ä–µ—Å—Ç—ã"
        bot.send_message(consolee, respons1e)
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π "–∑–∞–ø–∏—Å–∞—Ç—å —Ä–æ–ª–∏"
        if message.text.lower().startswith('/–∑–∞–ø–∏—Å–∞—Ç—å_—Ä–µ—Å—Ç—ã'):
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã
            text = message.text[len('/–∑–∞–ø–∏—Å–∞—Ç—å_—Ä–µ—Å—Ç—ã'):].strip()
            if len(text) > 0:
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç –≤ —Ñ–∞–π–ª roli.json
                with open('resti.json', 'w') as file:
                    data = {
                        'rest': text
                    }
                    json.dump(data, file)
                response = '–¢–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω –≤ resti.json!'
                newtxt = "üìå –ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è '—Ä–µ—Å—Ç—ã' —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω"
                bot.send_message(consolee, newtxt)
            else:
                response = '–í—ã –Ω–µ –≤–≤–µ–ª–∏ —Ç–µ–∫—Å—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ resti.json'
        else:
            response = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞'
        bot.reply_to(message, response)

def write_roles(message):
    if message.from_user.id == ls or message.from_user.id == tanya:
        user_id = message.from_user.id
        user_name = message.from_user.username
        respons1e = f"üìå{user_id} ({user_name}) –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É /–∑–∞–ø–∏—Å–∞—Ç—å —Ä–æ–ª–∏"
        bot.send_message(consolee, respons1e)
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π "–∑–∞–ø–∏—Å–∞—Ç—å —Ä–æ–ª–∏"
        if message.text.lower().startswith('/–∑–∞–ø–∏—Å–∞—Ç—å_—Ä–æ–ª–∏'):
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã
            text = message.text[len('/–∑–∞–ø–∏—Å–∞—Ç—å_—Ä–æ–ª–∏'):].strip()
            if len(text) > 0:
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç –≤ —Ñ–∞–π–ª roli.json
                with open('roles.json', 'w') as file:
                    data = {
                        'role': text
                    }
                    json.dump(data, file)
                response = '–¢–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω –≤ roles.json!'
                newtxt = "üìå –ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è '—Ä–æ–ª–∏' —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω"
                bot.send_message(consolee, newtxt)
            else:
                response = '–í—ã –Ω–µ –≤–≤–µ–ª–∏ —Ç–µ–∫—Å—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ roles.json'
        else:
            response = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞'
        bot.reply_to(message, response)