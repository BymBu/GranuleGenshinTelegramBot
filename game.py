from tokens import bot, consolee, chat_game, pers1, pers2, persh, persh2
from telebot import types
import time
import json
import datetime
import random
import sconsole




def send_help(message):
    with open('roli.json', 'r', encoding="utf-8") as file:
        data = json.load(file)
        helpa = data['help']
    bot.send_message(message.chat.id, helpa)


def achivment(message):
    bot.send_message(message.chat.id,
                           f"üìã| –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è:\n–ù–æ–≤–∏—á–æ–∫ - –∏–º–µ–π—Ç–µ —Ö–æ—Ç—è-–±—ã 1 –∫—Ä—É—Ç–∫—É —É —Å–µ–±—è –Ω–∞ —Å—á–µ—Ç—É\n–©–µ–¥—Ä—ã–π - –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –∫—Ä—É—Ç–∫–∞–º–∏ (–ø–∞–π @name —á–∏—Å–ª–æ) 5 —Ä–∞–∑\n–ö—Ä—É—Ç–∏–ª—å—â–∏–∫ - –û—Ç–∫—Ä—É—Ç–∏—Ç–µ 50 –∫—Ä—É—Ç–æ–∫!\n–ö—Ä—É—Ç–∏–ª—å—â–∏–∫ 2 - –æ—Ç–∫—Ä—É—Ç–∏—Ç–µ 200 –∫—Ä—É—Ç–æ–∫!")
    sconsole.send_console(message)

def shop(message):

    keyboard = types.InlineKeyboardMarkup()
    top_button2 = types.InlineKeyboardButton("1", callback_data='—Ç–æ–≤–∞—Ä2')
    top_button3 = types.InlineKeyboardButton("2", callback_data='—Ç–æ–≤–∞—Ä3')
    top_button4 = types.InlineKeyboardButton("3", callback_data='—Ç–æ–≤–∞—Ä4')
    top_button5 = types.InlineKeyboardButton("4", callback_data='—Ç–æ–≤–∞—Ä5')
    keyboard.row(top_button2, top_button3, top_button4, top_button5)
    text = """
    ‚ö†Ô∏è| *ATTENTION!* –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ –≤–Ω–∏–∑—É –±–æ—Ç —Å—Ä–∞–∑—É –æ—Ñ–æ—Ä–º–ª—è–µ—Ç –≤–∞—à—É –ø–æ–∫—É–ø–∫—É!
    
üè™| *–í—ã–±–µ—Ä–∏—Ç–µ –∂–µ–ª–∞–µ–º—ã–π —Ç–æ–≤–∞—Ä:*
üëë *–¢–æ–≤–∞—Ä 1* = VIP —Å—Ç–∞—Ç—É—Å. –¶–µ–Ω–∞ - 20 –∫—Ä—É—Ç–æ–∫
üÖ±Ô∏è *–¢–æ–≤–∞—Ä 2* = –±—É—Å—Ç (–ø–æ–≤—ã—à–µ–Ω–∞ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å  –ø–µ—Ä—Å–æ–≤) –Ω–∞ 3 —á–∞—Å–∞. 
–¶–µ–Ω–∞ - 15 –∫—Ä—É—Ç–æ–∫ (–†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –≤—Å–µ—Ö)
üå± *–¢–æ–≤–∞—Ä 3* = 1 –∫—Ä—É—Ç–∫–∞ –∑–∞ –ø—ã–ª—å—Ü—É. –¶–µ–Ω–∞ - 160 –ø—ã–ª—å—Ü—ã
üå± *–¢–æ–≤–∞—Ä 4* = 10 –ö—Ä—É—Ç–æ–∫ –∑–∞ –ø—ã–ª—å—Ü—É. –¶–µ–Ω–∞ - 1600 –ø—ã–ª—å—Ü—ã"""

    bot.send_message(message.chat.id, text, parse_mode='Markdown', reply_markup=keyboard)
    sconsole.send_console(message)
def vipferma(message):
    with open('vip.json', 'r') as file:
        vip_data = json.load(file)

    if message.from_user.username in vip_data and (
            datetime.datetime.now() - datetime.datetime.strptime(str(vip_data[message.from_user.username]),
                                                                 "%Y-%m-%d %H:%M:%S")) < datetime.timedelta(days=7):

        user_name = message.from_user.username

        current_time = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")

        with open('viptime.json', 'r') as file:
            timers = json.load(file)

        if str(user_name) in timers:
            last_time = datetime.datetime.strptime(timers[str(user_name)], "%Y-%m-%d %H:%M:%S")
            time_difference = datetime.datetime.now() - last_time

            if time_difference.total_seconds() < 3600:
                remaining_time = datetime.timedelta(seconds=3600 - time_difference.total_seconds())
                bot.reply_to(message, f"‚ùå –û–¢–ö–ê–ó | —Ñ–∞—Ä–º–∏—Ç—å –º–æ–∂–Ω–æ —Ä–∞–∑ –≤ —á–∞—Å\n–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ {remaining_time}")
                sconsole.send_console(message)
                return

        timers[str(user_name)] = current_time

        with open('viptime.json', 'w') as file:
            json.dump(timers, file)


        user_name = message.from_user.username
        krutki_file = 'krutki.json'
        timers_file = 'viptime.json'

        with open(krutki_file, 'r') as file:
            krutki_data = json.load(file)
        with open(timers_file, 'r') as file:
            timers_data = json.load(file)

        if user_name not in krutki_data:
            krutki_data[user_name] = 0

        krutki_count = random.randint(6, 10)
        krutki_data[user_name] += krutki_count

        with open(krutki_file, 'w') as file:
            json.dump(krutki_data, file)
        if message.chat.id == chat_game:
            bot.reply_to(message,
                         f"ü•≥| –í—ã –ø–æ–ª—É—á–∏–ª–∏ {krutki_count} –∫—Ä—É—Ç–æ–∫!\nüí•| –¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –í–∞—à–∏—Ö –∫—Ä—É—Ç–æ–∫: {krutki_data[user_name]}\n‚ù§Ô∏è‚Äçüî•| –ü—Ä–æ—Ñ–∏–ª—å - –ö—Ç–æ —è")
        else:
            bot.reply_to(message,
                         f"ü•≥| –í—ã –ø–æ–ª—É—á–∏–ª–∏ {krutki_count} –∫—Ä—É—Ç–æ–∫!\nüí•| –¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –í–∞—à–∏—Ö –∫—Ä—É—Ç–æ–∫: {krutki_data[user_name]}\n‚ù§Ô∏è‚Äçüî•| –ü—Ä–æ—Ñ–∏–ª—å - –ö—Ç–æ —è\n–ö–†–£–¢–ò–¢–¨ –í –ì–ï–ô–ú –ß–ê–¢–ï - https://t.me/+R_uQeMG26TVkYzQy")
        sconsole.send_console(message)
    else:
        bot.send_message(message.chat.id, "‚ùå| –£ –≤–∞—Å –Ω–µ—Ç VIP —Å—Ç–∞—Ç—É—Å–∞! –ö—É–ø–∏—Ç—å - –º–∞–≥–∞–∑–∏–Ω")
        sconsole.send_console(message)


def defferma(message):
    try:
        user_id = message.from_user.id
        current_time = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        with open('timers.json', 'r') as file:
            timers = json.load(file)
        if str(user_id) in timers:
            last_time = datetime.datetime.strptime(timers[str(user_id)], "%Y-%m-%d %H:%M:%S")
            time_difference = datetime.datetime.now() - last_time
            if time_difference.total_seconds() < 3600:
                remaining_time = datetime.timedelta(seconds=3600 - time_difference.total_seconds())
                bot.reply_to(message, f"‚ùå –û–¢–ö–ê–ó | —Ñ–∞—Ä–º–∏—Ç—å –º–æ–∂–Ω–æ —Ä–∞–∑ –≤ —á–∞—Å\n–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ {remaining_time}")
                sconsole.send_console(message)
                return

        timers[str(user_id)] = current_time

        with open('timers.json', 'w') as file:
            json.dump(timers, file)
        user_name = message.from_user.username
        krutki_file = 'krutki.json'
        timers_file = 'timers.json'
        with open(krutki_file, 'r') as file:
            krutki_data = json.load(file)
        with open(timers_file, 'r') as file:
            timers_data = json.load(file)
        if user_name not in krutki_data:
            krutki_data[user_name] = 0
        krutki_count = random.randint(3, 6)
        krutki_data[user_name] += krutki_count
        with open(krutki_file, 'w') as file:
            json.dump(krutki_data, file)
        if message.chat.id == chat_game:
            bot.reply_to(message,
                         f"ü•≥| –í—ã –ø–æ–ª—É—á–∏–ª–∏ {krutki_count} –∫—Ä—É—Ç–æ–∫!\nüí•| –¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –í–∞—à–∏—Ö –∫—Ä—É—Ç–æ–∫: {krutki_data[user_name]}\n‚ù§Ô∏è‚Äçüî•| –ü—Ä–æ—Ñ–∏–ª—å - –ö—Ç–æ —è")
        else:
            bot.reply_to(message,
                         f"ü•≥| –í—ã –ø–æ–ª—É—á–∏–ª–∏ {krutki_count} –∫—Ä—É—Ç–æ–∫!\nüí•| –¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –í–∞—à–∏—Ö –∫—Ä—É—Ç–æ–∫: {krutki_data[user_name]}\n‚ù§Ô∏è‚Äçüî•| –ü—Ä–æ—Ñ–∏–ª—å - –ö—Ç–æ —è\n–ö–†–£–¢–ò–¢–¨ –í –ì–ï–ô–ú –ß–ê–¢–ï - https://t.me/+R_uQeMG26TVkYzQy")
        sconsole.send_console(message)
    except ConnectionError:
        bot.reply_to(message, '–û—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')


def peredacha(message):
    nazv = message.text.split("@")[1].split()[0]
    summa = int(message.text.split()[-1])
    igrok = message.from_user.username

    user = message.from_user.username
    krutki_file = 'krutki.json'
    with open(krutki_file, 'r') as file:
        krutki_data = json.load(file)
    if nazv not in krutki_data:
        krutki_data[nazv] = 0
    if igrok not in krutki_data:
        krutki_data[igrok] = 0
    if krutki_data[igrok] >= summa:
        krutki_data[igrok] -= summa
        krutki_data[nazv] += summa
        with open('krutki.json', 'w') as file:
            json.dump(krutki_data, file)
        msg = bot.send_message(message.chat.id, f"‚úÖ| @{igrok} –ø–µ—Ä–µ–≤—ë–ª @{nazv} {summa} –∫—Ä—É—Ç–æ–∫!")
        with open('pay.json', 'r') as file:
            data = json.load(file)
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ —Ñ–∞–π–ª–µ
        if user in data:
            # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π –∫–æ–º–∞–Ω–¥—ã –Ω–∞ 1
            data[user] += 1
        else:
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            if user is None:
                user = message.from_user.first_name
            data[user] = 1
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª molitvi.json
        with open('pay.json', 'w') as file:
            json.dump(data, file)
    else:
        msg = bot.send_message(message.chat.id, f"‚ùå| @{igrok} –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫—Ä—É—Ç–æ–∫!")
    sconsole.send_console(message)


def kto_ti(message):
    nazv = message.text.split("@")[1]
    lico = random.randint(1, 3)
    user = message.from_user.username
    if lico == 1:
        kek = "üë©üèø"
    elif lico == 2:
        kek = "üë©üèª"
    elif lico == 3:
        kek = "üë±üèª‚Äç‚ôÇÔ∏è"
    with open('VIP.json', 'r') as file:
        vip_data = json.load(file)
    if nazv in vip_data and (
            datetime.datetime.now() - datetime.datetime.strptime(str(vip_data[nazv]),
                                                                 "%Y-%m-%d %H:%M:%S")) < datetime.timedelta(days=7):
        remaining_time = datetime.timedelta(days=7) - (
                datetime.datetime.now() - datetime.datetime.strptime(str(vip_data[nazv]),
                                                                     "%Y-%m-%d %H:%M:%S"))
        vip = f"üëëvip - {remaining_time}"
    else:
        vip = 'üëëvip - –Ω–µ—Ç'

    krutki_file = 'krutki.json'
    with open(krutki_file, 'r') as file:
        krutki_data = json.load(file)
    if nazv not in krutki_data:
        krutki_data[nazv] = 0
    with open('pil.json', 'r') as pilca:
        pil_data = json.load(pilca)
    if nazv not in pil_data:
        pil_data[nazv] = 0
    with open('molitvi.json', 'r') as file:
        mol_data = json.load(file)
    if nazv not in mol_data:
        mol_data[nazv] = 0
    if mol_data[nazv] >= 50:
        krut_dost = '‚úÖ'
    else:
        krut_dost = '‚ùå'
    if mol_data[nazv] >= 200:
        krut_dost2 = '‚úÖ'
    else:
        krut_dost2 = '‚ùå'
    with open('osebe.json', 'r', encoding='utf-8') as file:
        osebe = json.load(file)
    if nazv not in osebe:
        osebe[nazv] = '–æ–ø–∏—Å–∞–Ω–∏—è –ø–æ–∫–∞ –Ω–µ—Ç'
    with open('pers.json', 'r', encoding='utf-8') as file:
        perss = json.load(file)
    if nazv not in perss:
        perss[nazv] = '0'
    with open('pers2.json', 'r', encoding='utf-8') as file:
        persss = json.load(file)
    if nazv not in persss:
        persss[nazv] = '0'
    krutki_file = 'krutki.json'
    with open(krutki_file, 'r', encoding='utf-8') as file:
        krutki_data = json.load(file)
    if nazv not in krutki_data:
        krutki_data[nazv] = 0
    if krutki_data[nazv] >= 1:
        novichek = '‚úÖ'
    else:
        novichek = '‚ùå'
    with open(krutki_file, 'w', encoding='utf-8') as file:
        json.dump(krutki_data, file)
    with open('pay.json', 'r', encoding='utf-8') as file:
        datapay = json.load(file)
    if nazv not in datapay:
        datapay[nazv] = 0
    if datapay[nazv] >= 5:
        shedr = '‚úÖ'
    else:
        shedr = "‚ùå"
    with open('clans.json', 'r', encoding='utf-8') as f:
        clans = json.load(f)
    user_clan = ''
    for clan_name, clan_info in clans.items():
        if nazv in clan_info['users']:
            user_clan = clan_name
            break
    bot.send_message(message.chat.id, f"{kek}| –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ @{nazv}\n\n{vip}\n\nüí¨| –û —Å–µ–±–µ:\n{osebe[nazv]}\n\nüè∞| –ö–ª–∞–Ω: {user_clan}\n\nüå±| –ö—Ä—É—Ç–æ–∫: {krutki_data[nazv]}\n‚ú®| –ü—ã–ª—å—Ü–∞: {pil_data[nazv]}\nüçì| –û—Ç–∫—Ä—É—á–µ–Ω–æ –∫—Ä—É—Ç–æ–∫: {mol_data[nazv]}\n\n–í—ã–±–∏—Ç–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π:\n4Ô∏è‚É£‚≠ê| {persss[nazv]}\n5Ô∏è‚É£‚≠ê| {perss[nazv]}\n\n‚≠ê| –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è:\n–ù–æ–≤–∏—á–æ–∫ - {novichek}\n–©–µ–¥—Ä—ã–π - {shedr}\n–ö—Ä—É—Ç–∏–ª—å—â–∏–∫ - {krut_dost}\n–ö—Ä—É—Ç–∏–ª—å—â–∏–∫ 2 - {krut_dost2}")
    sconsole.send_console(message)
def ktoya(message):
    user_name = message.from_user.username
    lico = random.randint(1, 7)
    user = message.from_user.username
    if lico == 1:
        kek = "üë©üèø"
    elif lico == 2:
        kek = "üë©üèª"
    elif lico == 3:
        kek = "üë±üèª‚Äç‚ôÇÔ∏è"
    elif lico == 4:
        kek = "üë¥üèºÔ∏è"
    elif lico == 5:
        kek = "üë®‚Äçü¶≤Ô∏è"
    elif lico == 6:
        kek = "üëπÔ∏è"
    elif lico == 7:
        kek = "üë±üèø‚Äç‚ôÄÔ∏è"
    with open('VIP.json', 'r') as vipka:
        vip_data = json.load(vipka)
    if message.from_user.username in vip_data and (
            datetime.datetime.now() - datetime.datetime.strptime(str(vip_data[message.from_user.username]),
                                                                 "%Y-%m-%d %H:%M:%S")) < datetime.timedelta(days=7):
        remaining_time = datetime.timedelta(days=7) - (
                datetime.datetime.now() - datetime.datetime.strptime(str(vip_data[message.from_user.username]),
                                                                     "%Y-%m-%d %H:%M:%S"))
        vip = f"üëëvip - {remaining_time}"
    else:
        vip = 'üëëvip - –Ω–µ—Ç'
    krutki_file = 'krutki.json'
    with open(krutki_file, 'r') as krutki:
        krutki_data = json.load(krutki)
    if user_name not in krutki_data:
        krutki_data[user_name] = 0
    with open('pil.json', 'r') as pilca:
        pil_data = json.load(pilca)
    if user_name not in pil_data:
        pil_data[user_name] = 0
    with open('molitvi.json', 'r') as molitv:
        data = json.load(molitv)
    if user_name not in data:
        data[user_name] = 0
    if data[user_name] >= 50:
        krut_dost = '‚úÖ'
    else:
        krut_dost = '‚ùå'
    if data[user_name] >= 200:
        krut_dost2 = '‚úÖ'
    else:
        krut_dost2 = '‚ùå'
    with open('osebe.json', 'r', encoding='utf-8') as opis:
        osebe = json.load(opis)
    if user_name not in osebe:
        osebe[user_name] = '–æ–ø–∏—Å–∞–Ω–∏—è –ø–æ–∫–∞ –Ω–µ—Ç'
    with open('pers.json', 'r', encoding='utf-8') as chetr:
        perss = json.load(chetr)
    if user_name not in perss:
        perss[user_name] = '0'
    with open('pers2.json', 'r', encoding='utf-8') as legi:
        persss = json.load(legi)
    if user_name not in persss:
        persss[user_name] = '0'
    krutki_file = 'krutki.json'
    with open(krutki_file, 'r', encoding='utf-8') as file:
        krutki_data = json.load(file)
    if user_name not in krutki_data:
        krutki_data[user_name] = 0
    if krutki_data[user_name] >= 1:
        novichek = '‚úÖ'
    else:
        novichek = '‚ùå'
    with open('pay.json', 'r', encoding='utf-8') as file:
        datapay = json.load(file)
    if user_name not in datapay:
        datapay[user_name] = 0
    if datapay[user_name] >= 5:
        shedr = '‚úÖ'
    else:
        shedr = "‚ùå"
    with open('clans.json', 'r', encoding='utf-8') as f:
        clans = json.load(f)
    user_clan = ''
    for clan_name, clan_info in clans.items():
        if user_name in clan_info['users']:
            user_clan = clan_name
            break
    user_name = message.from_user.username
    bot.send_message(message.chat.id, f"{kek}| –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ @{user_name}\n\n{vip}\n\nüí¨| –û —Å–µ–±–µ:\n{osebe[user_name]}\n\nüè∞| –ö–ª–∞–Ω: {user_clan}\n\nüå±| –ö—Ä—É—Ç–æ–∫: {krutki_data[user_name]}\n‚ú®| –ü—ã–ª—å—Ü–∞: {pil_data[user_name]}\nüçì| –û—Ç–∫—Ä—É—á–µ–Ω–æ –∫—Ä—É—Ç–æ–∫: {data[user]}\n\n–í—ã–±–∏—Ç–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π:\n4Ô∏è‚É£‚≠ê| {persss[user_name]}\n5Ô∏è‚É£‚≠ê| {perss[user_name]}\n\n‚≠ê| –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è:\n–ù–æ–≤–∏—á–æ–∫ - {novichek}\n–©–µ–¥—Ä—ã–π - {shedr}\n–ö—Ä—É—Ç–∏–ª—å—â–∏–∫ - {krut_dost}\n–ö—Ä—É—Ç–∏–ª—å—â–∏–∫ 2 - {krut_dost2}")
    sconsole.send_console(message)


def top(message):
    markup = types.InlineKeyboardMarkup(row_width=1)
    btn1 = types.InlineKeyboardButton("üå±–ö—Ä—É—Ç–∫–∏", callback_data='select_top: –∫—Ä—É—Ç–∫–∏')
    btn2 = types.InlineKeyboardButton("üçì–û—Ç–∫—Ä. –ö—Ä—É—Ç–∫–∏", callback_data='select_top: –æ—Ç–∫—Ä. –∫—Ä—É—Ç–∫–∏')
    btn3 = types.InlineKeyboardButton("‚ú®–õ–µ–≥–∏", callback_data='select_top: –ª–µ–≥–∏')
    btn4 = types.InlineKeyboardButton("üíª–ö–ª–∞–Ω—ã", callback_data='select_top: –∫–ª–∞–Ω—ã')
    markup.add(btn1, btn2, btn3, btn4)

    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∂–µ–ª–∞–µ–º—ã–π –¢–û–ü-10:", reply_markup=markup)
    sconsole.send_console(message)


def krytki(message):
    a = pers1
    b = pers2
    bot.send_message(message.chat.id,
                          f"–ì–ï–ô–ú–ï–†–°–ö–û–ï –û–¢–î–ï–õ–ï–ù–ò–ï (–¢–ê–ú –ö–†–£–¢–ò–¢–¨ –ü–ï–†–°–û–ù–ê–ñ–ï–ô) https://t.me/+R_uQeMG26TVkYzQy \nüòà –ü—Ä–∞–≤–∏–ª–∞ –ø—Ä–æ—Å—Ç—ã. –¢–µ–±–µ –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –º–µ–∂–¥—É\n–∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ üí•–ë–∞–Ω–Ω–µ—Ä–∞–º–∏, –∫–æ–≥–æ —Ç—ã —Ö–æ—á–µ—à—å.\n–î–ª—è –∫—Ä—É—Ç–æ–∫ –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—ã\n‚Ä¢ –ö—Ä—É—Ç–∏—Ç—å {a} (1 –∏–ª–∏ 10)\n‚Ä¢ –ö—Ä—É—Ç–∏—Ç—å {b} (1 –∏–ª–∏ 10)\n‚Ä¢ –ö—Ä—É—Ç–∏—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç (1 –∏–ª–∏ 10)\n‚Ä¢ –ö—Ä—É—Ç–∏—Ç—å –æ—Ä—É–∂–µ–π–Ω—ã–π (1 –∏–ª–∏ 10)")
    sconsole.send_console(message)








